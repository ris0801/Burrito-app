{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhsingh/Desktop/Everyrealm/my-burrito-shop-frontend/src/components/OrdersList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersList = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      // Handle error appropriately\n    }\n  };\n  const markAsPrepared = async orderId => {\n    try {\n      await axios.put(`http://localhost:3001/api/orders/${orderId}/prepared`);\n      // Refresh the list of orders or update the status in the UI\n      fetchOrders(); // Or implement a more efficient update logic\n    } catch (error) {\n      console.error('Error marking order as prepared:', error);\n      // Handle error appropriately\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Order ID: \", order.order_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cost: $\", order.total_cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.burrito_name, \" - Quantity: \", item.quantity]\n        }, item.burrito_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => markAsPrepared(order.order_id),\n        children: \"Mark as Prepared\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, order.order_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersList, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrdersList;\nexport default OrdersList;\nvar _c;\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OrdersList","_s","orders","setOrders","fetchOrders","response","get","data","error","console","markAsPrepared","orderId","put","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","order_id","total_cost","items","item","burrito_name","quantity","burrito_id","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhsingh/Desktop/Everyrealm/my-burrito-shop-frontend/src/components/OrdersList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst OrdersList = () => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/orders');\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      // Handle error appropriately\n    }\n  };\n\n  const markAsPrepared = async (orderId) => {\n    try {\n      await axios.put(`http://localhost:3001/api/orders/${orderId}/prepared`);\n      // Refresh the list of orders or update the status in the UI\n      fetchOrders(); // Or implement a more efficient update logic\n    } catch (error) {\n      console.error('Error marking order as prepared:', error);\n      // Handle error appropriately\n    }\n  };\n\n  return (\n    <div>\n      <h1>Orders List</h1>\n      {orders.map(order => (\n        <div key={order.order_id}>\n          <h3>Order ID: {order.order_id}</h3>\n          <p>Total Cost: ${order.total_cost}</p>\n          <ul>\n            {order.items.map(item => (\n              <li key={item.burrito_id}>\n                {item.burrito_name} - Quantity: {item.quantity}\n              </li>\n            ))}\n          </ul>\n          <button onClick={() => markAsPrepared(order.order_id)}>Mark as Prepared</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default OrdersList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;MACpEH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAI;MACF,MAAMd,KAAK,CAACe,GAAG,CAAE,oCAAmCD,OAAQ,WAAU,CAAC;MACvE;MACAP,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD;IACF;EACF,CAAC;EAED,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBf,MAAM,CAACgB,GAAG,CAACC,KAAK,iBACfpB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,GAAI,YAAU,EAACM,KAAK,CAACC,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnClB,OAAA;QAAAc,QAAA,GAAG,eAAa,EAACM,KAAK,CAACE,UAAU;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtClB,OAAA;QAAAc,QAAA,EACGM,KAAK,CAACG,KAAK,CAACJ,GAAG,CAACK,IAAI,iBACnBxB,OAAA;UAAAc,QAAA,GACGU,IAAI,CAACC,YAAY,EAAC,eAAa,EAACD,IAAI,CAACE,QAAQ;QAAA,GADvCF,IAAI,CAACG,UAAU;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLlB,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACS,KAAK,CAACC,QAAQ,CAAE;QAAAP,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAVxEE,KAAK,CAACC,QAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWnB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/CID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
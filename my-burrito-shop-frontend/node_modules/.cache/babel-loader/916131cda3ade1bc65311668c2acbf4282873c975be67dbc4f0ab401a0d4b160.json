{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhsingh/Desktop/Everyrealm/my-burrito-shop-frontend/src/components/OrdersList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersList = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      setError(null); // Reset error state\n      try {\n        const response = await axios.get('http://localhost:3001/api/orders');\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        setError(error.message); // Save the error message\n        // You can also set an error state here to show an error message\n      }\n      setIsLoading(false);\n    };\n    fetchOrders();\n  }, []);\n  const markAsPrepared = async orderId => {\n    try {\n      await axios.put(`http://localhost:3001/api/orders/${orderId}/prepared`);\n      // Option 1: Remove the order from the list\n      setOrders(prevOrders => prevOrders.filter(order => order.order_id !== orderId));\n\n      // Option 2: Update the status in the UI (requires a slight change in your data model)\n    } catch (error) {\n      console.error('Error marking order as prepared:', error);\n      // Handle error appropriately\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error loading orders: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Order ID: \", order.order_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cost: $\", order.total_cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.items && Array.isArray(order.items) ? order.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.burrito_name, \" - Quantity: \", item.quantity]\n        }, item.burrito_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in this order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => markAsPrepared(order.order_id),\n        children: \"Mark as Prepared\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, order.order_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersList, \"SVEP1AOR9JIVNk0EaTl2ogFVlzw=\");\n_c = OrdersList;\nexport default OrdersList;\nvar _c;\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OrdersList","_s","orders","setOrders","isLoading","setIsLoading","error","setError","fetchOrders","response","get","data","console","message","markAsPrepared","orderId","put","prevOrders","filter","order","order_id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","total_cost","items","Array","isArray","item","burrito_name","quantity","burrito_id","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhsingh/Desktop/Everyrealm/my-burrito-shop-frontend/src/components/OrdersList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst OrdersList = () => {\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      setError(null); // Reset error state\n      try {\n        const response = await axios.get('http://localhost:3001/api/orders');\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        setError(error.message); // Save the error message\n        // You can also set an error state here to show an error message\n      }\n      setIsLoading(false);\n    };\n\n    fetchOrders();\n  }, []);\n\n\n  const markAsPrepared = async (orderId) => {\n    try {\n      await axios.put(`http://localhost:3001/api/orders/${orderId}/prepared`);\n      // Option 1: Remove the order from the list\n      setOrders(prevOrders => prevOrders.filter(order => order.order_id !== orderId));\n  \n      // Option 2: Update the status in the UI (requires a slight change in your data model)\n    } catch (error) {\n      console.error('Error marking order as prepared:', error);\n      // Handle error appropriately\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Orders List</h1>\n      {isLoading ? (\n        <p>Loading orders...</p>\n      ) : error ? (\n        <p>Error loading orders: {error}</p>\n      ) : orders.length > 0 ? (\n    orders.map(order => (\n    <div key={order.order_id}>\n        <h3>Order ID: {order.order_id}</h3>\n        <p>Total Cost: ${order.total_cost}</p>\n        <ul>\n        {order.items && Array.isArray(order.items) ? (\n            order.items.map(item => (\n            <li key={item.burrito_id}>\n                {item.burrito_name} - Quantity: {item.quantity}\n            </li>\n            ))\n        ) : (\n            <p>No items in this order</p>\n        )}\n        </ul>\n        <button onClick={() => markAsPrepared(order.order_id)}>Mark as Prepared</button>\n    </div>\n    ))\n      ) : (\n        <p>No orders to display</p>\n      )}\n    </div>\n  );\n  \n};\n\nexport default OrdersList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}